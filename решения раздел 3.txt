/// 1. Дан массив названий переменных в camelCase. Преобразовать названия в snake_case.

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s[] =  new String[5];    
        System.out.println("Введите " + s.length + " cтрок camelCase");
        for (int i=0;i<5;i++){
         s[i] = scan.nextLine();}

        for (String w: s
             ) {System.out.println(strToSnake(w));

        }
    }

    private static String  strToSnake(String n) {
        if (Character.isUpperCase(n.charAt(0)))
            n = n.substring(0,0)  +  Character.toLowerCase(n.charAt(0)) + n.substring(1);  /// для первого символа

         for(int i = 0;i < n.length();i++){
             if (Character.isUpperCase(n.charAt(i))) {
                 n = n.substring(0,i) + "_" +  Character.toLowerCase(n.charAt(i)) + n.substring(i+1); /// формируем стринг и перезаписываем в себя же
             }
        }
       return n;
    }
    }


/// 2. Заменить  в строке все word на letter

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String str  =  "";
        System.out.println("Введите строку:  ");
        str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        while (str.indexOf("word")!=-1){
        int indexW = str.indexOf("word");
        str = str.substring(0,indexW) + "letter" + str.substring(indexW+4);}
        System.out.println(str);

    }

    }


/// 3.В строке найти количество цифр.
package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        //String str  =  "";
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        int k = 0;
        for (int i = 0; i < str.length(); i++) {
            if (Character.isDigit(str.charAt(i)))
                k++;}


        System.out.println("Количество цифр: " + k);


    }
    }

/// 4. найти в строке количество чисел.
package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        str = "0w" + str;  // чтобы избежать пустого значения при наличии разделителя на первом месте
        String [] s2 = str.split("\\D+",0);
        System.out.println("Количество чисел: " + (s2.length-1));

        for (int i = 1;i<s2.length;i++)
             System.out.println(s2[i]);

    }
    }


/// 5.Удалить в строке все лишние пробелы. Крайние пробелы удалить. 


package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        str = " " + str;  // чтобы избежать пустого значения при наличии разделителя на первом месте
        String [] s2 = str.split("\\s+",0);
        System.out.println("Количество слов: " + (s2.length-1));
        str = s2[1];
        for (int i = 2;i<s2.length;i++)
            str= str + " " + s2[i];

        System.out.println(str);
    }
    }



////   работа со строкой как с обьектом типа String или Stringbilder.

/// 1. дан текст (строка). Нейдите наибольшее подряд идущее количество пробелов.


package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        str = "x" + str;  // чтобы избежать пустого значения при наличии разделителя на первом месте
        String [] s2 = str.split("\\S+",0);
        int max = 0;
        if (s2.length!=0) max = s2[1].length();
        for(int i = 1;i<s2.length;i++)
            if (max < s2[i].length()) max = s2[i].length();

        System.out.println("Максимаольное количество пробелов подряд: " + max);
    }
    }



//// 2. в строке после каждого "a" вставить "b"

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        StringBuilder str = new StringBuilder(scan.nextLine());
        System.out.println("Исходная строка:  " + str);
        int i =0;
        while (str.indexOf("a",i) >= 0){
        str.insert(str.indexOf("a",i)+1,"b");
        i = str.indexOf("a",i)+1;}

        System.out.println("Итоговая строка: " + str);
    }
    }


/// 3. Узнать, является ли заданное слово полиндромом.

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        StringBuilder str = new StringBuilder(scan.nextLine());

        System.out.println("Исходная строка:  " + str);

        if ( str.toString().equals(reverseString(str.toString()))) {
            System.out.println("Это слово полиндром");}
        else System.out.println("Это слово не полиндром");

        }
      public static String reverseString(String str) {
        return new StringBuilder(str).reverse().toString();
    }
    }




/// 4,  ----


/// 5.  Посчитать сколько раз среди символов заданной строки встречается а.

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        StringBuilder str = new StringBuilder(scan.nextLine());

        System.out.println("Исходная строка:  " + str);
         int a = 0;
        for (int i = 0;i<str.length();i++){
            if (str.charAt(i) == 'a') a++;
        }
        System.out.println("Количество а:  " + a);
        }

    }


/// 6. Из заданной строки получить новую, повторив каждый символ дважды.


package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        StringBuilder str = new StringBuilder(scan.nextLine());
        System.out.println("Исходная строка:  " + str);
        int i =0;
       while(i<str.length()){
            str.insert(i,str.charAt(i));
            i +=2;}

        System.out.println("Итоговая строка: " + str);
    }
}


/// 7. Вводится строка. Требуется удалить из неё повторяющиеся символы и все пробелы.

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        StringBuilder str = new StringBuilder(scan.nextLine());
        System.out.println("Исходная строка:  " + str);
        int i =1;

        for (int j=0;j<str.length();j++){   //// удаляем повторяющиеся.
        while (str.indexOf( Character.toString(str.charAt(j)),j+1) >= 0){
            str.delete(str.indexOf( Character.toString(str.charAt(j)),j+1),str.indexOf( Character.toString(str.charAt(j)),j+1)+1);
            }}

        for (int j=0;j<str.length();j++){   //// удаляем пробелы.
            if (Character.toString(str.charAt(j)).equals(" "))
                str.delete(j,j+1);
            }


        System.out.println("Итоговая строка: " + str);
    }
}


/// 8. Найти самое большое слово в строке.


package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        // str = " " + str;  // чтобы избежать пустого значения при наличии разделителя на первом месте
        String [] s2 = str.split("\\s+",0);
        System.out.println("Количество слов: " + (s2.length));
        str = s2[0];
        int max = s2[0].length();
        for (int i = 1;i<s2.length;i++)
            if (max<s2[i].length()) max=s2[i].length();

        System.out.println("Максималная длина слова: " + max);
    }
}

/// 9.Посчитать количество маленьких и больших букв в ведённой строке, учитывать толко английские.


package com.company;

import java.util.Scanner;


public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();
        System.out.println("Исходная строка:  " + str);
        int l1 = 0;
        int l2 = 0;
        for (int i=0;i<str.length();i++) {
            if (Character.UnicodeBlock.of(str.charAt(i)).equals(Character.UnicodeBlock.BASIC_LATIN) && Character.isLowerCase(str.charAt(i))) {
                l1++;
            }
            else
                if (Character.UnicodeBlock.of(str.charAt(i)).equals(Character.UnicodeBlock.BASIC_LATIN) && Character.isUpperCase(str.charAt(i))) {
                    l2++;
                }
        }
       System.out.println("  Латинских маленьких: " + l1 + "  Латинских больших: " + l2);
    }
}


/// 10.  Строка состоит из нескольких предложений, каждое из которых кончается точкой, восклицательным 
///      или впросительным знаком. Определить количество предложений.

package com.company;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        StringBuilder str = new StringBuilder(scan.nextLine());

        System.out.println("Исходная строка:  " + str);
        int a = 0;
        for (int i = 0;i<str.length();i++){
            if (str.charAt(i) == '.' || str.charAt(i) == '!' || str.charAt(i) == '?') a++;
        }
        System.out.println("Количество предложений:  " + a);
    }
}




///   Работа с регулярными вырвжениями.

/// Создать приложение , разбирающее текст.и позволяющее делать с текстом различные операции.
/// отсортировать абзацы по колличеству предложений.
/// В каждом предложении отсортировать слова по длине.

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.println("Введите строку:  ");
        String str = scan.nextLine();

        System.out.println("Исходная строка:  " + str);


        System.out.println("отсортировать абзацы по кол-ву предложений:  " + abz(str));

        // сортируем слова в предложениях
        String str1 = "";
        String [] s2 = str.split("\\.+",0);
        for (int j1 = 0; j1 < s2.length; j1++) {
            str1 += slova_po_dline(s2[j1]);
        }
        System.out.println("отсортировать слова по кол-ву символов:  " + str1);

    }
    public static int  cp (String str1) {  // количество предложений
        int a = 0;
        for (int i = 0; i < str1.length(); i++) {
            if (str1.charAt(i) == '.' || str1.charAt(i) == '!' || str1.charAt(i) == '?') a++;
        }
        return a;
    }
    public static String abz (String str2) {  // отсортировать абзац по кол-ву предложений

        String [] s2 = str2.split("\\t+",0);

        String t ;
        for (int j1 = 0; j1 < s2.length; j1++) {
            for (int j2 = 0; j2 <s2.length ; j2++) {

                if (cp(s2[j1]) < cp(s2[j2])) {
                    t = s2[j1];
                    s2[j1] = s2[j2];
                    s2[j2] = t;
                }
            }
        }
        String str3 = "";
        for (int j1 = 0; j1 < s2.length; j1++) {
            str3 = str3 + s2[j1] + "\t";
        }
       return  str3;
    }
    public static String slova_po_dline (String str2) { //отсортировать слова по длине в предложении
        String [] s2 = str2.split("\\s+",0);

        String t ;
        for (int j1 = 0; j1 < s2.length; j1++) {
            for (int j2 = 0; j2 <s2.length ; j2++) {

                if (s2[j1].length() < s2[j2].length()) {
                    t = s2[j1];
                    s2[j1] = s2[j2];
                    s2[j2] = t;
                }
            }
        }
        String str3 = "";
        for (int j1 = 0; j1 < s2.length; j1++) {
            str3 = str3 + s2[j1] + " " ;
        }
        return  (str3 + ". ");
    }

}


//2. Дана строка, содержащая следующий текст (xml-документ):
//<notes>
//<note id = "1">
//<to>Вася</to>
//<from>Света</from>
//<heading>Напоминание</heading>
//<body>Позвони мне завтра!</body>
//</note>
//<note id = "2">
//<to>Петя</to>
//<from>Маша</from>
//<heading>Важное напоминание</heading>
//<body/>
//</note>
//</notes>
//        Напишите анализатор, позволяющий последовательно возвращать содержимое узлов xml-документа и его тип (открывающий
//        тег, закрывающий тег, содержимое тега, тег без тела). Пользоваться готовыми парсерами XML для решения данной задачи
//        нельзя.


////    Вариант 1. В лоб

package com.company;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        //System.out.println("Введите строку:  ");
        String str = " <notes> <note id =" + "\"1\"" + ">  <to>Вася</to>  <from>Света</from>  <heading>Напоминание</heading>  <body>Позвони мне завтра!</body> </note> <note id = " + "\"2\"" + ">  <to>Петя</to> <from>Маша</from>  <heading>Важное напоминание</heading>  <body/> </note> </notes> ";

        System.out.println("Исходная строка:  " + str);

        String [] s1 = str.split("<note id =",0);
        for (int i = 1; i< s1.length;i++)
                {


                    System.out.println("ID:  " + s1[i].substring(s1[i].indexOf( '\"' ) + 1,s1[i].indexOf( '\"', s1[i].indexOf( '\"' ) + 1) ));

                    if (s1[i].indexOf("<heading/>") == -1){
            System.out.println(" Кому : " +   Pat(s1[i],"<to>","</to>"));}
                    else System.out.println(" содержание <to> пустое");

                    if (s1[i].indexOf("<heading/>") == -1){
            System.out.println(" от : " +   Pat(s1[i],"<from>","</from>"));}
                else System.out.println(" содержание  <from> пустое");

                 if (s1[i].indexOf("<heading/>") == -1){
            System.out.println(" заголовок : " +   Pat(s1[i],"<heading>","</heading>"));}
                    else System.out.println(" содержание <heading> пустое");

                 if (s1[i].indexOf("<body/>") == -1){
            System.out.println(" содержание : " +   Pat(s1[i],"<body>","</body>"));}
                 else System.out.println(" содержание <body> пустое");

        }

    }

    public static String Pat(String str1, String str2, String str3) {  // выделяем подстроку между заданными тэгами
        String strOut = "";
        if ((str1.indexOf(str2) >= 0)|| (str1.indexOf(str3) >= 0)) {
            strOut = str1.substring( str1.indexOf(str2)+str2.length(), str1.indexOf(str3));}

        return strOut;
    }
}


////   Вариант 2 , универсальный анализатор, ищет  произвольные открывающие  тэги и выводит их содержание.

package com.company;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    public static void main(String[] args) {


        String str = " <notes> <note id =" + "\"1\"" + ">  <to>Вася</to>  <from>Света</from>  <heading>Напоминание</heading>  <body>Позвони мне завтра!</body> </note> <note id = " + "\"2\"" + ">  <to>Петя</to> <from>Маша</from>  <heading>Важное напоминание</heading>  <body/> </note> </notes> ";

        System.out.println("Исходная строка:  " + str);

        Pattern pattern = Pattern.compile("<[^/].+?>"); // тэги кроме закрывающих
        Matcher matcher = pattern.matcher(str);
        String tstr = "";
        while (matcher.find()) {  //  тут ищем открывающие тэги, и ищем содержание с помощью метода Pat ()
            tstr = str.substring(matcher.start(), matcher.end());
            System.out.println( "тэг :" + tstr);
            System.out.println( "Содержание  :" + Pat(str,tstr, "</" + tstr.substring(1,tstr.length()) ) );

        }

    }

    public static String Pat(String str1, String str2, String str3) {  //  процедура для поиска подстроки из str1 между str2 и str3

        String strOut = "";
        if ((str1.indexOf(str2) >= 0)&& (str1.indexOf(str3) >= 0)) {
            strOut = str1.substring( str1.indexOf(str2)+str2.length(), str1.indexOf(str3));}

        return strOut;
    }
}
